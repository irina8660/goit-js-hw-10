{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst refs = {\n  startButton: document.querySelector('[data-start]'),\n  datetimePicker: document.querySelector('#datetime-picker'),\n};\n\nrefs.startButton.disabled = true;\nlet userSelectedDate = '';\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] > new Date()) {\n      userSelectedDate = selectedDates[0];\n      refs.startButton.disabled = false;\n    } else {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n      });\n      refs.startButton.disabled = true;\n    }\n  },\n};\n\nflatpickr(refs.datetimePicker, options);\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor((ms % hour) / minute);\n  const seconds = Math.floor((ms % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction updateTimer({ days, hours, minutes, seconds }) {\n  document.querySelector('[data-days]').textContent = addLeadingZero(days);\n  document.querySelector('[data-hours]').textContent = addLeadingZero(hours);\n  document.querySelector('[data-minutes]').textContent =\n    addLeadingZero(minutes);\n  document.querySelector('[data-seconds]').textContent =\n    addLeadingZero(seconds);\n}\n\nlet timerId;\n\nfunction startTimer() {\n  refs.startButton.disabled = true;\n  refs.datetimePicker.disabled = true;\n\n  timerId = setInterval(() => {\n    const now = new Date();\n    const ms = userSelectedDate - now;\n\n    if (ms <= 0) {\n      clearInterval(timerId);\n      updateTimer({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n      iziToast.success({\n        title: \"Time's up!\",\n        message: 'The countdown has ended!',\n      });\n      refs.datetimePicker.disabled = false;\n      return;\n    }\n\n    const timeLeft = convertMs(ms);\n    updateTimer(timeLeft);\n  }, 1000);\n}\n\nrefs.startButton.addEventListener('click', startTimer);\n"],"names":["refs","userSelectedDate","options","selectedDates","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","updateTimer","timerId","startTimer","timeLeft"],"mappings":"+IAKA,MAAMA,EAAO,CACX,YAAa,SAAS,cAAc,cAAc,EAClD,eAAgB,SAAS,cAAc,kBAAkB,CAC3D,EAEAA,EAAK,YAAY,SAAW,GAC5B,IAAIC,EAAmB,GAEvB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACjBA,EAAc,CAAC,EAAI,IAAI,MACzBF,EAAmBE,EAAc,CAAC,EAClCH,EAAK,YAAY,SAAW,KAE5BI,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACjB,CAAO,EACDJ,EAAK,YAAY,SAAW,GAE/B,CACH,EAEAK,EAAUL,EAAK,eAAgBE,CAAO,EAEtC,SAASI,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAOH,EAAK,KAAQ,GAAM,EACzCI,EAAU,KAAK,MAAOJ,EAAK,IAAU,GAAM,EAEjD,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASC,EAAY,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACtD,SAAS,cAAc,aAAa,EAAE,YAAcC,EAAeJ,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcI,EAAeH,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YACvCG,EAAeF,CAAO,EACxB,SAAS,cAAc,gBAAgB,EAAE,YACvCE,EAAeD,CAAO,CAC1B,CAEA,IAAII,EAEJ,SAASC,GAAa,CACpBhB,EAAK,YAAY,SAAW,GAC5BA,EAAK,eAAe,SAAW,GAE/Be,EAAU,YAAY,IAAM,CAE1B,MAAMR,EAAKN,EADC,IAAI,KAGhB,GAAIM,GAAM,EAAG,CACX,cAAcQ,CAAO,EACrBD,EAAY,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,CAAC,CAAE,EACzDV,EAAS,QAAQ,CACf,MAAO,aACP,QAAS,0BACjB,CAAO,EACDJ,EAAK,eAAe,SAAW,GAC/B,MACD,CAED,MAAMiB,EAAWX,EAAUC,CAAE,EAC7BO,EAAYG,CAAQ,CACrB,EAAE,GAAI,CACT,CAEAjB,EAAK,YAAY,iBAAiB,QAASgB,CAAU"}